{% extends "base.html.twig" %}

{% block mainContent %}
<div class="container-fluid">
    <section class="px-md-4">
        <div class="row">
            <div class="col-lg-12 mb-3">
                <div class="card card-frame">
                    <div class="card-body">
                        <table class="table table-sm table-hover mb-0 text-center">
                            <thead>
                                <tr>
                                    <th>Album</th>
                                    <th>Page</th>
                                    <th>Nom</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            {% for s in album.sets %}
                                <tr>
                                    <td>{{ s.album.name }}</td>
                                    <td id="page{{s.id}}">{{ s.page }}</td>
                                    <td id="name{{s.id}}">{{ s.name }}</td>
                                    <td>
                                        <button class="waves-effect waves-light btn btn-primary btn-sm"
                                            data-url="{{ path('app_admin_set_edit', {'id': s.id}) }}"
                                            data-title="Modifier une page"
                                            data-bs-toggle="modal"
                                            data-bs-target="#pageModal">Modifier</button>
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<div class="modal fade" id="pageModal" tabindex="-1" aria-hidden="true" style="z-index:10000;">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content bg-dark text-white border-secondary">
        <div class="modal-header">
            <h5 class="modal-title" id="pageModalTitle">Modification d'une page</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body" id="pageModalBody">
            <div class="text-center text-muted">Chargement...</div>
        </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javaScripts %}
<script nonce="{{ csp_nonce('script') }}">
    function initModalPage () {
        const modal = document.getElementById('pageModal');
        const modalBody = document.getElementById('pageModalBody');
        const modalTitle = document.getElementById('pageModalTitle');

        if (!modal || !modalBody) return;

        modal.addEventListener('show.bs.modal', event => {
            const trigger = event.relatedTarget;
            const url = trigger.getAttribute('data-url');
            const title = trigger.getAttribute('data-title');
            modalTitle.innerHTML = title;

            if (!url) return;

            // Affiche un loader temporaire
            modalBody.innerHTML = '<div class="text-center text-muted">Chargement...</div>';

            // Charge le formulaire
            fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
                .then(response => {
                    if (!response.ok) throw new Error('Erreur lors du chargement du formulaire');
                        return response.text();
                })
                .then(html => {
                    modalBody.innerHTML = html;
                })
                .catch(err => {
                    console.error(err);
                    modalBody.innerHTML = '<div class="text-danger">Erreur de chargement.</div>';
                });
        });

        document.addEventListener('submit', function(e) {
            if (e.target && e.target.matches('#ajaxSetForm')) {
                e.preventDefault();
                const form = e.target;
                const action = form.getAttribute('action');
                const method = form.getAttribute('method') || 'POST';

                const formData = new FormData(form);

                fetch(action, {
                    method: method,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: formData
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        // Mise à jour dynamique des champs dans le tableau
                        document.querySelector(`#page${data.data.id}`).textContent = data.data.page;
                        document.querySelector(`#name${data.data.id}`).textContent = data.data.name;

                        // Ferme le modal Bootstrap 5
                        const modalElement = document.getElementById('pageModal');
                        const modalInstance = bootstrap.Modal.getInstance(modalElement);
                        modalInstance.hide();
                    } else {
                        console.error('Erreur de validation côté serveur');
                    }
                })
                .catch(err => {
                    console.error('Erreur AJAX :', err);
                });
            }
        });

    }

    function onPageLoad() {
        initModalPage();
    }
    
    window.addEventListener('load', onPageLoad);
</script>
{% endblock %}
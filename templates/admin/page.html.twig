{% extends "base.html.twig" %}

{% block mainContent %}
<div class="container-fluid">
    <section class="px-md-4">
        <div class="row">
            <div class="col-lg-12 mb-3">
                <div class="card card-frame">
                    <div class="card-body">
                        <table class="table table-sm table-hover mb-0 text-center">
                            <thead>
                                <tr>
                                    <th>Album</th>
                                    <th>Page</th>
                                    <th>Nom</th>
                                </tr>
                            </thead>
                            <tbody>
                            {% for s in sets %}
                                <tr>
                                    <td>{{ s.album.name }}</td>
                                    <td class="editable" data-id="{{ s.id }}" data-field="page" id="page{{s.id}}">{{ s.page }}</td>
                                    <td class="editable" data-id="{{ s.id }}" data-field="name"id="name{{s.id}}">{{ s.name }}</td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
{% endblock %}

{% block javaScripts %}
<script>
    function initEditInline() {
        document.querySelectorAll("td.editable").forEach(function (cell) {
            cell.addEventListener("click", function () {
                if (cell.querySelector("input")) return; // déjà en édition

                const oldValue = cell.innerText.trim();
                const input = document.createElement("input");
                if (cell.dataset.field === "page") {
                    input.type = "number";
                    input.min = "1";
                    input.max = "25";
                } else {
                    input.type = "text";
                }
                input.value = oldValue;
                input.className = "form-control form-control-sm";

                cell.innerHTML = "";
                cell.appendChild(input);
                input.focus();

                const save = () => {
                    const newValue = input.value.trim();
                    if (newValue === oldValue) {
                        cell.innerText = oldValue;
                        return;
                    }

                    fetch(`/admin/set/${cell.dataset.id}/inline-edit`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded",
                            "X-Requested-With": "XMLHttpRequest"
                        },
                        body: new URLSearchParams({
                            field: cell.dataset.field,
                            value: newValue
                        })
                    })
                    .then(r => r.json())
                    .then(data => {
                        if (data.success) {
                            cell.innerText = data.value;
                        } else {
                            cell.innerText = oldValue;
                            MGOM.notify(data.error, 'error');
                        }
                    })
                    .catch(() => {
                        cell.innerText = oldValue;
                        MGOM.notify("Erreur réseau", 'error');
                    });
                };

                input.addEventListener("blur", save);
                input.addEventListener("keydown", function (e) {
                    if (e.key === "Enter") save();
                    if (e.key === "Escape") cell.innerText = oldValue;
                });
            });
        });
    }

    function onPageLoad() {
        initEditInline();
    }
    
    window.addEventListener('load', onPageLoad);
</script>
{% endblock %}